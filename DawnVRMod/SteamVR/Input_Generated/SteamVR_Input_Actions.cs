// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Vector2 p_default_V2_LeftThumbstick;
        
        private static SteamVR_Action_Vector2 p_default_V2_RightThumbstick;
        
        private static SteamVR_Action_Boolean p_default_Bool_ButtonA;
        
        private static SteamVR_Action_Boolean p_default_Bool_ButtonB;
        
        private static SteamVR_Action_Boolean p_default_Bool_ButtonX;
        
        private static SteamVR_Action_Boolean p_default_Bool_ButtonY;
        
        private static SteamVR_Action_Boolean p_default_Bool_LThumbstickUp;
        
        private static SteamVR_Action_Boolean p_default_Bool_LThumbstickDown;
        
        private static SteamVR_Action_Boolean p_default_Bool_LThumbstickLeft;
        
        private static SteamVR_Action_Boolean p_default_Bool_LThumbstickRight;
        
        private static SteamVR_Action_Boolean p_default_Bool_RThumbstickUp;
        
        private static SteamVR_Action_Boolean p_default_Bool_RThumbstickDown;
        
        private static SteamVR_Action_Boolean p_default_Bool_RThumbstickLeft;
        
        private static SteamVR_Action_Boolean p_default_Bool_RThumbstickRight;
        
        private static SteamVR_Action_Boolean p_default_Bool_LTrigger;
        
        private static SteamVR_Action_Boolean p_default_Bool_LGrip;
        
        private static SteamVR_Action_Single p_default_V1_LTrigger;
        
        private static SteamVR_Action_Single p_default_V1_LGrip;
        
        private static SteamVR_Action_Boolean p_default_Bool_RTrigger;
        
        private static SteamVR_Action_Boolean p_default_Bool_RGrip;
        
        private static SteamVR_Action_Single p_default_V1_RTrigger;
        
        private static SteamVR_Action_Single p_default_V1_RGrip;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy <SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy <SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy <SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_V2_LeftThumbstick
        {
            get
            {
                return SteamVR_Actions.p_default_V2_LeftThumbstick.GetCopy <SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_V2_RightThumbstick
        {
            get
            {
                return SteamVR_Actions.p_default_V2_RightThumbstick.GetCopy <SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_ButtonA
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_ButtonA.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_ButtonB
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_ButtonB.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_ButtonX
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_ButtonX.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_ButtonY
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_ButtonY.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_LThumbstickUp
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_LThumbstickUp.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_LThumbstickDown
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_LThumbstickDown.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_LThumbstickLeft
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_LThumbstickLeft.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_LThumbstickRight
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_LThumbstickRight.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_RThumbstickUp
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_RThumbstickUp.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_RThumbstickDown
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_RThumbstickDown.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_RThumbstickLeft
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_RThumbstickLeft.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_RThumbstickRight
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_RThumbstickRight.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_LTrigger
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_LTrigger.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_LGrip
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_LGrip.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single default_V1_LTrigger
        {
            get
            {
                return SteamVR_Actions.p_default_V1_LTrigger.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single default_V1_LGrip
        {
            get
            {
                return SteamVR_Actions.p_default_V1_LGrip.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_RTrigger
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_RTrigger.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Bool_RGrip
        {
            get
            {
                return SteamVR_Actions.p_default_Bool_RGrip.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single default_V1_RTrigger
        {
            get
            {
                return SteamVR_Actions.p_default_V1_RTrigger.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single default_V1_RGrip
        {
            get
            {
                return SteamVR_Actions.p_default_V1_RGrip.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy <SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[]
            {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_V2_LeftThumbstick,
                    SteamVR_Actions.default_V2_RightThumbstick,
                    SteamVR_Actions.default_Bool_ButtonA,
                    SteamVR_Actions.default_Bool_ButtonB,
                    SteamVR_Actions.default_Bool_ButtonX,
                    SteamVR_Actions.default_Bool_ButtonY,
                    SteamVR_Actions.default_Bool_LThumbstickUp,
                    SteamVR_Actions.default_Bool_LThumbstickDown,
                    SteamVR_Actions.default_Bool_LThumbstickLeft,
                    SteamVR_Actions.default_Bool_LThumbstickRight,
                    SteamVR_Actions.default_Bool_RThumbstickUp,
                    SteamVR_Actions.default_Bool_RThumbstickDown,
                    SteamVR_Actions.default_Bool_RThumbstickLeft,
                    SteamVR_Actions.default_Bool_RThumbstickRight,
                    SteamVR_Actions.default_Bool_LTrigger,
                    SteamVR_Actions.default_Bool_LGrip,
                    SteamVR_Actions.default_V1_LTrigger,
                    SteamVR_Actions.default_V1_LGrip,
                    SteamVR_Actions.default_Bool_RTrigger,
                    SteamVR_Actions.default_Bool_RGrip,
                    SteamVR_Actions.default_V1_RTrigger,
                    SteamVR_Actions.default_V1_RGrip,
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_V2_LeftThumbstick,
                    SteamVR_Actions.default_V2_RightThumbstick,
                    SteamVR_Actions.default_Bool_ButtonA,
                    SteamVR_Actions.default_Bool_ButtonB,
                    SteamVR_Actions.default_Bool_ButtonX,
                    SteamVR_Actions.default_Bool_ButtonY,
                    SteamVR_Actions.default_Bool_LThumbstickUp,
                    SteamVR_Actions.default_Bool_LThumbstickDown,
                    SteamVR_Actions.default_Bool_LThumbstickLeft,
                    SteamVR_Actions.default_Bool_LThumbstickRight,
                    SteamVR_Actions.default_Bool_RThumbstickUp,
                    SteamVR_Actions.default_Bool_RThumbstickDown,
                    SteamVR_Actions.default_Bool_RThumbstickLeft,
                    SteamVR_Actions.default_Bool_RThumbstickRight,
                    SteamVR_Actions.default_Bool_LTrigger,
                    SteamVR_Actions.default_Bool_LGrip,
                    SteamVR_Actions.default_V1_LTrigger,
                    SteamVR_Actions.default_V1_LGrip,
                    SteamVR_Actions.default_Bool_RTrigger,
                    SteamVR_Actions.default_Bool_RGrip,
                    SteamVR_Actions.default_V1_RTrigger,
                    SteamVR_Actions.default_V1_RGrip};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[]
            {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[]
            {
                    SteamVR_Actions.default_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[]
            {
                    SteamVR_Actions.default_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[]
            {
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_Bool_ButtonA,
                    SteamVR_Actions.default_Bool_ButtonB,
                    SteamVR_Actions.default_Bool_ButtonX,
                    SteamVR_Actions.default_Bool_ButtonY,
                    SteamVR_Actions.default_Bool_LThumbstickUp,
                    SteamVR_Actions.default_Bool_LThumbstickDown,
                    SteamVR_Actions.default_Bool_LThumbstickLeft,
                    SteamVR_Actions.default_Bool_LThumbstickRight,
                    SteamVR_Actions.default_Bool_RThumbstickUp,
                    SteamVR_Actions.default_Bool_RThumbstickDown,
                    SteamVR_Actions.default_Bool_RThumbstickLeft,
                    SteamVR_Actions.default_Bool_RThumbstickRight,
                    SteamVR_Actions.default_Bool_LTrigger,
                    SteamVR_Actions.default_Bool_LGrip,
                    SteamVR_Actions.default_Bool_RTrigger,
                    SteamVR_Actions.default_Bool_RGrip};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[]
            {
                    SteamVR_Actions.default_V1_LTrigger,
                    SteamVR_Actions.default_V1_LGrip,
                    SteamVR_Actions.default_V1_RTrigger,
                    SteamVR_Actions.default_V1_RGrip};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[]
            {
                    SteamVR_Actions.default_V2_LeftThumbstick,
                    SteamVR_Actions.default_V2_RightThumbstick};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[]
            {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_V2_LeftThumbstick,
                    SteamVR_Actions.default_V2_RightThumbstick,
                    SteamVR_Actions.default_Bool_ButtonA,
                    SteamVR_Actions.default_Bool_ButtonB,
                    SteamVR_Actions.default_Bool_ButtonX,
                    SteamVR_Actions.default_Bool_ButtonY,
                    SteamVR_Actions.default_Bool_LThumbstickUp,
                    SteamVR_Actions.default_Bool_LThumbstickDown,
                    SteamVR_Actions.default_Bool_LThumbstickLeft,
                    SteamVR_Actions.default_Bool_LThumbstickRight,
                    SteamVR_Actions.default_Bool_RThumbstickUp,
                    SteamVR_Actions.default_Bool_RThumbstickDown,
                    SteamVR_Actions.default_Bool_RThumbstickLeft,
                    SteamVR_Actions.default_Bool_RThumbstickRight,
                    SteamVR_Actions.default_Bool_LTrigger,
                    SteamVR_Actions.default_Bool_LGrip,
                    SteamVR_Actions.default_V1_LTrigger,
                    SteamVR_Actions.default_V1_LGrip,
                    SteamVR_Actions.default_Bool_RTrigger,
                    SteamVR_Actions.default_Bool_RGrip,
                    SteamVR_Actions.default_V1_RTrigger,
                    SteamVR_Actions.default_V1_RGrip};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create <SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create <SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create <SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_V2_LeftThumbstick = ((SteamVR_Action_Vector2)(SteamVR_Action.Create <SteamVR_Action_Vector2>("/actions/default/in/V2_LeftThumbstick")));
            SteamVR_Actions.p_default_V2_RightThumbstick = ((SteamVR_Action_Vector2)(SteamVR_Action.Create <SteamVR_Action_Vector2>("/actions/default/in/V2_RightThumbstick")));
            SteamVR_Actions.p_default_Bool_ButtonA = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_ButtonA")));
            SteamVR_Actions.p_default_Bool_ButtonB = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_ButtonB")));
            SteamVR_Actions.p_default_Bool_ButtonX = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_ButtonX")));
            SteamVR_Actions.p_default_Bool_ButtonY = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_ButtonY")));
            SteamVR_Actions.p_default_Bool_LThumbstickUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_LThumbstickUp")));
            SteamVR_Actions.p_default_Bool_LThumbstickDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_LThumbstickDown")));
            SteamVR_Actions.p_default_Bool_LThumbstickLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_LThumbstickLeft")));
            SteamVR_Actions.p_default_Bool_LThumbstickRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_LThumbstickRight")));
            SteamVR_Actions.p_default_Bool_RThumbstickUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_RThumbstickUp")));
            SteamVR_Actions.p_default_Bool_RThumbstickDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_RThumbstickDown")));
            SteamVR_Actions.p_default_Bool_RThumbstickLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_RThumbstickLeft")));
            SteamVR_Actions.p_default_Bool_RThumbstickRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_RThumbstickRight")));
            SteamVR_Actions.p_default_Bool_LTrigger = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_LTrigger")));
            SteamVR_Actions.p_default_Bool_LGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_LGrip")));
            SteamVR_Actions.p_default_V1_LTrigger = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/default/in/V1_LTrigger")));
            SteamVR_Actions.p_default_V1_LGrip = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/default/in/V1_LGrip")));
            SteamVR_Actions.p_default_Bool_RTrigger = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_RTrigger")));
            SteamVR_Actions.p_default_Bool_RGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Bool_RGrip")));
            SteamVR_Actions.p_default_V1_RTrigger = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/default/in/V1_RTrigger")));
            SteamVR_Actions.p_default_V1_RGrip = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/default/in/V1_RGrip")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create <SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
        }
    }
}
